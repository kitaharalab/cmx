plugins {
    id 'com.android.library'
    id 'maven-publish'
}

version = '1.1.2'

repositories {

    // maven {
    //     name = "processing-android"
    //     url = uri("https://raw.github.com/processing/processing-android/repository/")
    // }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kitaharalab/javax.sound.midi-for-Android")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kitaharalab/USB-MIDI-Driver")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
    
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 27
        targetSdkVersion 31
        versionCode 1
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            java.srcDirs = ['../src/main_android', '../src/main_common']
            manifest.srcFile '../src/main_android/AndroidManifest.xml'
        }

//        test {
//            java.srcDirs = ['../src/androidTest']
//        }

    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/groovy-release-info.properties'
        exclude 'META-INF/INDEX.LIST'
    }

}

dependencies {
//    println configurations
    // This dependency is exported to consumers, that is to say found on their compile classpath.
//    api fileTree(dir: 'lib', include: '*.jar')

    api fileTree(dir: '../libs', include: ['*.jar'])
    api fileTree(dir: 'libs', include: ['*.jar'])
    
    implementation 'javax.sound.midi-for-Android:javax.sound.midi-release:0.2.0-kitaharalab'
    implementation 'USB-MIDI-Driver:mididriver-release:0.2.0-kitaharalab'

    // cmx_common
    // https://mvnrepository.com/artifact/org.apache.commons/commons-math
    implementation 'org.apache.commons:commons-math:2.2'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    implementation 'org.apache.commons:commons-math3:3.6.1'
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
    implementation 'org.codehaus.groovy:groovy:3.0.9'
    // https://mvnrepository.com/artifact/javazoom/jlayer
    implementation 'javazoom:jlayer:1.0.1'
    // https://mvnrepository.com/artifact/xml-resolver/xml-resolver
    implementation 'xml-resolver:xml-resolver:1.2'
    // https://mvnrepository.com/artifact/xalan/xalan
    implementation 'xalan:xalan:2.7.2'
    // https://mvnrepository.com/artifact/xalan/serializer
    implementation 'xalan:serializer:2.7.2'
// https://mvnrepository.com/artifact/xerces/xercesImpl
    implementation 'xerces:xercesImpl:2.12.2'
    // https://mvnrepository.com/artifact/be.ac.ulg.montefiore.run.jahmm/jahmm
    implementation 'be.ac.ulg.montefiore.run.jahmm:jahmm:0.6.2'

    implementation 'androidx.fragment:fragment:1.4.1'


////    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    testImplementation 'junit:junit:4.13.2'

    implementation 'com.google.guava:guava:31.0.1-jre'

}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/kitaharalab/cmx"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
        publications {
            release(MavenPublication) {
                from components.release
                artifactId = "${artifactId}-release"
                // groupId 'jp.kthrlab.cmx'
            }
            debug(MavenPublication) {
                from components.debug
                artifactId = "${artifactId}-debug"
                // groupId 'jp.kthrlab.cmx'
            }
        }
    }
}

task comps {
    afterEvaluate {
        println("Components: " + components.names)
    }
}
