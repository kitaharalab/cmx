RPN, NRPN 非対応
MIDI MetaEvent テキスト系　非対応
（さしあたってテンポだけ対応）
（そのうち，拍子と調も対応予定）

MusicXML はparwise前提
ペダル対応後まわし
MIDI XML の時刻表記は delta　前提

SCCXML の仕様変更
sccの属性にdivision

SCC2MIDI はさしあたってはテンポだけ対応

SCCXML にペダルをどう記述するか要検討．

DeviationInstance から SCCなどへの変換について．
notewise deviation はいままで note単位で
（MusicXMLWrapper.processNotePartwise使用）
non-partwise deviation は control view を介して 
SCCXML のヘッダ（∴MIDI XMLのtrack no.1）
partwise deviation は扱い未定．

とりあえず 4/4 を仮定．拍子を MusicXML から読み取るのは今後の課題．
# measure->attributes に買いてあるから1小節ずつ追う必要あり？

MusicXML 和音非対応
chordタグ？　backwardタグ？

rit accel タグ廃止？

非対応タグをどうするか。単に無視？エラー出力？ワーニング出力？

TODO: PianoRollCompatibleインターフェース


CMXFileWrapper関連
XXXView, NodeInterface系は読み取り用
addXXX(), beginXXX(), endXXX(), setXX()は書き込み用
（一部 beginXXX() ではなく newXXX()．どちらに統一するか要検討）
ただし，ハンドラをオーバーライドしている部分は別．
processXXX()はデータ走査自動化用．走査中の処理内容はハンドラで指示
toXXX()は他のXML形式への変換．変換先のCMXFileWrapperインスタンスは
あらかじめ用意して引数に渡す．

シーケンシャルにデータを生成して書き込んでいくのが難しいファイルに関しては
XXXDataSet を用意してここにデータをため込んでから一気にファイルにaddする．
XXXDataSet はCMXFileWrapperインスタンスからcreateXXXDataSet()を
呼び出して取得するのを基本とする．
XXXDataSet に対して AbstractDataSet のような基底クラスを用意するかは未定．

Noteオブジェクトなどに対して getXPathExpression() するアルゴリズムについて，
もっと効率的なものを要検討．

DeviationDataSet: partwise deviation 未対応


MusicXMLWrapper に PartwiseNoteView と TimewiseNoteView を構築中．
ただし，note以外のMusicDataの扱いは未定．
（とりあえず，無視）

DeviationInstanceWrapper.toSCCXML などにおいて，
measureエレメントが中抜けになっている場合
（e.g. <measure number="1">の次が<measure number="3">）は，未対応．
対応の必要性を要検討．

deviationのreleaseが本当に反映されているか要チェック．

2007.5.31.thu.16:00 橋田question
samples/2parts-noatt.xml : 入力楽譜MusicXML
samples/2parts-noatt_sync.xml : 橋田プログラムで出力したdeviationXML
deviationXML, SMF を一気に出力するプログラム作成中．
（DeviationInstanceGeneratorSample.java と
ApplyDeviationInstance.java をほぼ足しただけのもの）
　　－＞CMXCommand.java に replaceFilenameToOutoFileName() と
　　　　setOutfilename(String outfilename) を追加，
　　　　start() と showErrorMessage() を public に変更．
ファイルは出力されるが，MIDIFileXML にdeviation が反映されない．

-> 
（北原より）
samples/2parts-noatt_sync.xml を見ると，
<non-partwise>が閉じられていません．
# <non-partwise>
#   <partwise/>
#   <notewise>
#     ...
#   </notewise>
# </note-partwise>
# となっている．
これが原因かも． <=== 修正してもらった！
あと，それとは別に，こちらで ApplyDeviationInstance を実行しようとすると，
よくわからないエラーを吐いて止まるので，原因を調査中．
（補足）
deviationsample2.xml は読めるのに，2parts-noatt_sync.xml は読めない．
->
どうやら，対応するMusicXMLファイルの2parts-noatt.xmlが読めない．
（FileNotFoundException）
->
target属性に相対パスで記述するため，ずれるとFileNotFoundExceptionになる．
とりあえず"-target"オプションを追加．
target MusicXMLのディレクトリをどうやって指定するか，要検討．


<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 1.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
"http://～/dtds/partwise.dtd" を読みこもうとする（ネットに接続しようとする）ので
ローカル環境（出張先など）では読込に失敗する．
　　　※ファイル読込時になにやら"待ち時間"があるのはこのせいです．
 -> アドホック対策：DTD一式をローカルに置き，さらに
 　 ファイル内タグの「http://~」をローカルアドレスに修正してしまう
  